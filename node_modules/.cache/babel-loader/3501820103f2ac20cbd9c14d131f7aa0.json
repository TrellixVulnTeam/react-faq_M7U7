{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\react\\\\react-faq\\\\src\\\\Test7.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Keepnote from './Keepnote';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Test7 = () => {\n  _s();\n\n  const [setData, setFullData] = useState([]);\n  const [data, fullData] = useState({\n    question: '',\n    ans: ''\n  });\n\n  const setVal = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    fullData(preval => {\n      return { ...preval,\n        [name]: value\n      };\n    });\n  };\n\n  const getVal = () => {\n    if (!Object.values(data).some(x => x === null || x === '')) {\n      setFullData(pre => {\n        return [...pre, data];\n      });\n      fullData({\n        question: '',\n        ans: ''\n      });\n    } else {\n      alert('please add the value');\n      return false;\n    }\n  };\n\n  const handleClick = () => {};\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      className: \"d-flex p-2 bd-highlight\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"m-3\",\n        id: \"standard-basic\",\n        label: \"Question\",\n        value: data.question,\n        name: \"question\",\n        onChange: setVal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"m-3\",\n        id: \"standard-basic\",\n        label: \"Ans\",\n        value: data.ans,\n        name: \"ans\",\n        onChange: setVal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"m-3\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: getVal,\n        children: \"Ask question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), setData.map((value, index) => {\n      const {\n        question,\n        ans\n      } = value;\n      return /*#__PURE__*/_jsxDEV(Keepnote, {\n        id: index,\n        question: question,\n        ans: ans\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 28\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"m-3\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleClick,\n      children: \"snackBar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Test7, \"bm6FXxIr9dIJkbRI7DOe2CkxnlE=\");\n\n_c = Test7;\nexport default Test7;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test7\");","map":{"version":3,"sources":["E:/project/react/react-faq/src/Test7.js"],"names":["React","useState","Keepnote","TextField","Button","Snackbar","IconButton","CloseIcon","Test7","setData","setFullData","data","fullData","question","ans","setVal","e","name","value","target","preval","getVal","Object","values","some","x","pre","alert","handleClick","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Keepnote from './Keepnote';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\n\r\n\r\n\r\n\r\nconst Test7=()=>{\r\n\r\n    const [setData, setFullData] = useState([]);\r\n    const [data, fullData] = useState({\r\n        question:'',\r\n        ans:''\r\n    })\r\n\r\n    const setVal=(e)=>{\r\n        const {name, value}=e.target;\r\n        fullData((preval)=>{\r\n            return{\r\n                ...preval,\r\n                [name]:value\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const getVal=()=>{\r\n        if(!Object.values(data).some(x => x ===null || x ==='')){\r\n            setFullData((pre)=>{\r\n                return [...pre,data];\r\n            })\r\n    \r\n            fullData({\r\n                question:'',\r\n                ans:''\r\n            });\r\n        }\r\n        else{\r\n            alert('please add the value');\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleClick=()=>{\r\n        \r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <form noValidate autoComplete=\"off\" className=\"d-flex p-2 bd-highlight\">\r\n                <TextField className=\"m-3\" id=\"standard-basic\" label=\"Question\" value={data.question} name=\"question\" onChange={setVal}/>\r\n                <TextField className=\"m-3\" id=\"standard-basic\" label=\"Ans\" value={data.ans} name=\"ans\" onChange={setVal}/>\r\n                <Button className=\"m-3\" variant=\"contained\" color=\"primary\" onClick={getVal}>Ask question</Button>\r\n            </form>\r\n      \r\n\r\n            {\r\n                setData.map((value, index)=>{\r\n                    const {question,ans}=value;\r\n                    return (\r\n                           <Keepnote\r\n                               key={index}\r\n                               id={index}\r\n                               question={question}\r\n                               ans={ans}\r\n                           /> \r\n                    )\r\n                })\r\n            }\r\n\r\n        <Button className=\"m-3\" variant=\"contained\" color=\"primary\" onClick={handleClick}>snackBar</Button>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Test7;"]},"metadata":{},"sourceType":"module"}