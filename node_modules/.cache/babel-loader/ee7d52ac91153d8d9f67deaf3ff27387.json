{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\react\\\\react-faq\\\\src\\\\Test7.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Keepnote from './Keepnote';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Test7 = () => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [setData, setFullData] = useState([]);\n  const [data, fullData] = useState({\n    question: '',\n    ans: ''\n  });\n\n  const setVal = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    fullData(preval => {\n      return { ...preval,\n        [name]: value\n      };\n    });\n  };\n\n  const getVal = () => {\n    if (!Object.values(data).some(x => x === null || x === '')) {\n      setFullData(pre => {\n        return [...pre, data];\n      });\n      fullData({\n        question: '',\n        ans: ''\n      });\n      setOpen(true);\n    } else {\n      alert('please add the value');\n      setOpen(false);\n      return false;\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    console.log(reason);\n\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      className: \"d-flex p-2 bd-highlight\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"m-3\",\n        id: \"standard-basic\",\n        label: \"Question\",\n        value: data.question,\n        name: \"question\",\n        onChange: setVal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"m-3\",\n        id: \"standard-basic\",\n        label: \"Ans\",\n        value: data.ans,\n        name: \"ans\",\n        onChange: setVal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"m-3\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: getVal,\n        children: \"Ask question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), setData.map((value, index) => {\n      const {\n        question,\n        ans\n      } = value;\n      return /*#__PURE__*/_jsxDEV(Keepnote, {\n        id: index,\n        question: question,\n        ans: ans\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: open,\n      autoHideDuration: 2000,\n      onClose: handleClose,\n      message: \"faq added successfully\",\n      action: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          size: \"small\",\n          onClick: handleClose,\n          children: \"UNDO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Test7, \"VI5/wMuBxNkoZxhVyNRdiVPr+Mk=\");\n\n_c = Test7;\nexport default Test7;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test7\");","map":{"version":3,"sources":["E:/project/react/react-faq/src/Test7.js"],"names":["React","useState","Keepnote","TextField","Button","Snackbar","IconButton","CloseIcon","Test7","open","setOpen","setData","setFullData","data","fullData","question","ans","setVal","e","name","value","target","preval","getVal","Object","values","some","x","pre","alert","handleClose","event","reason","console","log","map","index","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Keepnote from './Keepnote';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\n\r\n\r\n\r\n\r\nconst Test7=()=>{\r\n    const [open, setOpen]=useState(false);\r\n    const [setData, setFullData] = useState([]);\r\n    const [data, fullData] = useState({\r\n        question:'',\r\n        ans:''\r\n    })\r\n\r\n    const setVal=(e)=>{\r\n        const {name, value}=e.target;\r\n        fullData((preval)=>{\r\n            return{\r\n                ...preval,\r\n                [name]:value\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const getVal=()=>{\r\n        if(!Object.values(data).some(x => x ===null || x ==='')){\r\n            setFullData((pre)=>{\r\n                return [...pre,data];\r\n            })\r\n    \r\n            fullData({\r\n                question:'',\r\n                ans:''\r\n            });\r\n            setOpen(true);\r\n        }\r\n        else{\r\n            alert('please add the value');\r\n            setOpen(false);\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    const handleClose=(event,reason)=>{\r\n        console.log(reason);\r\n        if(reason==='clickaway'){\r\n            return; \r\n        }\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <form noValidate autoComplete=\"off\" className=\"d-flex p-2 bd-highlight\">\r\n          <TextField\r\n            className=\"m-3\"\r\n            id=\"standard-basic\"\r\n            label=\"Question\"\r\n            value={data.question}\r\n            name=\"question\"\r\n            onChange={setVal}\r\n          />\r\n          <TextField\r\n            className=\"m-3\"\r\n            id=\"standard-basic\"\r\n            label=\"Ans\"\r\n            value={data.ans}\r\n            name=\"ans\"\r\n            onChange={setVal}\r\n          />\r\n          <Button\r\n            className=\"m-3\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={getVal}\r\n          >\r\n            Ask question\r\n          </Button>\r\n        </form>\r\n\r\n        {setData.map((value, index) => {\r\n          const { question, ans } = value;\r\n          return (\r\n            <Keepnote key={index} id={index} question={question} ans={ans} />\r\n          );\r\n        })}\r\n\r\n\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={open}\r\n          autoHideDuration={2000}\r\n          onClose={handleClose}\r\n          message=\"faq added successfully\"\r\n          action={\r\n            <React.Fragment>\r\n              <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n                UNDO\r\n              </Button>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={handleClose}\r\n              >\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Test7;"]},"metadata":{},"sourceType":"module"}