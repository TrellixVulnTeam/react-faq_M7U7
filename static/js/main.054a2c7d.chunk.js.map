{"version":3,"sources":["Keepnote.js","Test7.js","App.js","reportWebVitals.js","index.js"],"names":["Keepnote","question","ans","Fragment","List","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","Typography","component","variant","color","Divider","Test7","useState","setData","setFullData","data","fullData","setVal","e","target","name","value","preval","noValidate","autoComplete","className","TextField","id","label","onChange","Button","onClick","pre","map","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRA8CeA,EAlCA,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,SAASC,EAAO,EAAPA,IAGtB,OACI,cAAC,IAAMC,SAAP,UAEJ,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAUC,WAAW,aAArB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,IAAI,aAAaC,IAAI,kIAE/B,cAACC,EAAA,EAAD,CACEC,QAAO,UAAKX,EAAL,KACPY,UACE,eAAC,IAAMV,SAAP,WACE,cAACW,EAAA,EAAD,CACEC,UAAU,OACVC,QAAQ,QACRC,MAAM,cAHR,kBADF,kBAQSf,WAKf,cAACgB,EAAA,EAAD,CAASF,QAAQ,QAAQD,UAAU,a,kBCyB1BI,G,MA1DH,WAER,MAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAyBF,mBAAS,CAC9BnB,SAAS,GACTC,IAAI,KAFR,mBAAOqB,EAAP,KAAaC,EAAb,KAKMC,EAAO,SAACC,GACV,MAAoBA,EAAEC,OAAfC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACbL,GAAS,SAACM,GACN,kCACOA,GADP,kBAEKF,EAAMC,QAiBnB,OACI,eAAC,IAAM1B,SAAP,WAEI,uBAAM4B,YAAU,EAACC,aAAa,MAAMC,UAAU,0BAA9C,UACI,cAACC,EAAA,EAAD,CAAWD,UAAU,MAAME,GAAG,iBAAiBC,MAAM,WAAWP,MAAON,EAAKtB,SAAU2B,KAAK,WAAWS,SAAUZ,IAChH,cAACS,EAAA,EAAD,CAAWD,UAAU,MAAME,GAAG,iBAAiBC,MAAM,MAAMP,MAAON,EAAKrB,IAAK0B,KAAK,MAAMS,SAAUZ,IACjG,cAACa,EAAA,EAAD,CAAQL,UAAU,MAAMjB,QAAQ,YAAYC,MAAM,UAAUsB,QAjB3D,WACTjB,GAAY,SAACkB,GACT,MAAM,GAAN,mBAAWA,GAAX,CAAejB,OAGnBC,EAAS,CACLvB,SAAS,GACTC,IAAI,MAUA,6BAKAmB,EAAQoB,KAAI,SAACZ,EAAOa,GAChB,IAAOzC,EAAc4B,EAAd5B,SAASC,EAAK2B,EAAL3B,IAChB,OACO,cAAC,EAAD,CAEIiC,GAAIO,EACJzC,SAAUA,EACVC,IAAKA,GAHAwC,WCrCrBC,MAXf,WACE,OACE,cAAC,IAAMxC,SAAP,UACE,qBAAK8B,UAAU,YAAf,SACE,cAAC,EAAD,SCKOW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.054a2c7d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Keepnote=({question,ans})=>{\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n\r\n    <List>\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemAvatar>\r\n          <Avatar alt=\"Remy Sharp\" src=\"https://secureservercdn.net/160.153.138.219/7xh.780.myftpupload.com/wp-content/uploads/2020/12/69381782.jpg?time=1626311519\" />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={`${question}?`}\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"textPrimary\"\r\n              >\r\n                Ans:\r\n              </Typography>\r\n              {` â€” ${ans}`}\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n    </List>\r\n          \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Keepnote;","import React, { useState } from 'react';\r\nimport Keepnote from './Keepnote';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst Test7=()=>{\r\n\r\n    const [setData, setFullData] = useState([]);\r\n    const [data, fullData] = useState({\r\n        question:'',\r\n        ans:''\r\n    })\r\n\r\n    const setVal=(e)=>{\r\n        const {name, value}=e.target;\r\n        fullData((preval)=>{\r\n            return{\r\n                ...preval,\r\n                [name]:value\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const getVal=()=>{\r\n        setFullData((pre)=>{\r\n            return [...pre,data];\r\n        })\r\n\r\n        fullData({\r\n            question:'',\r\n            ans:''\r\n        })\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n\r\n            <form noValidate autoComplete=\"off\" className=\"d-flex p-2 bd-highlight\">\r\n                <TextField className=\"m-3\" id=\"standard-basic\" label=\"Question\" value={data.question} name=\"question\" onChange={setVal}/>\r\n                <TextField className=\"m-3\" id=\"standard-basic\" label=\"Ans\" value={data.ans} name=\"ans\" onChange={setVal}/>\r\n                <Button className=\"m-3\" variant=\"contained\" color=\"primary\" onClick={getVal}>Ask question</Button>\r\n            </form>\r\n      \r\n\r\n            {\r\n                setData.map((value, index)=>{\r\n                    const {question,ans}=value;\r\n                    return (\r\n                           <Keepnote\r\n                               key={index}\r\n                               id={index}\r\n                               question={question}\r\n                               ans={ans}\r\n                           /> \r\n                    )\r\n                })\r\n            }\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Test7;","import React from 'react';\r\nimport Test7 from './Test7';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container\">\r\n        <Test7/>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}